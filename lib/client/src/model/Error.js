/**
 * Rosetta
 * A Standard for Blockchain Interaction
 *
 * The version of the OpenAPI document: 1.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Error model module.
 * @module model/Error
 * @version 1.3.1
 */
class Error {
    /**
     * Constructs a new <code>Error</code>.
     * Instead of utilizing HTTP status codes to describe node errors (which often do not have a good analog), rich errors are returned using this object.
     * @alias module:model/Error
     * @param code {Number} Code is a network-specific error code. If desired, this code can be equivalent to an HTTP status code.
     * @param message {String} Message is a network-specific error message.
     * @param retriable {Boolean} An error is retriable if the same request may succeed if submitted again.
     */
    constructor(code, message, retriable) { 
        
        Error.initialize(this, code, message, retriable);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, message, retriable) { 
        obj['code'] = code;
        obj['message'] = message;
        obj['retriable'] = retriable;
    }

    /**
     * Constructs a <code>Error</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Error} obj Optional instance to populate.
     * @return {module:model/Error} The populated <code>Error</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Error();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('retriable')) {
                obj['retriable'] = ApiClient.convertToType(data['retriable'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Code is a network-specific error code. If desired, this code can be equivalent to an HTTP status code.
 * @member {Number} code
 */
Error.prototype['code'] = undefined;

/**
 * Message is a network-specific error message.
 * @member {String} message
 */
Error.prototype['message'] = undefined;

/**
 * An error is retriable if the same request may succeed if submitted again.
 * @member {Boolean} retriable
 */
Error.prototype['retriable'] = undefined;






export default Error;

